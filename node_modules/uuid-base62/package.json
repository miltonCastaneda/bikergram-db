{
  "_args": [
    [
      {
        "raw": "uuid-base62",
        "scope": null,
        "escapedName": "uuid-base62",
        "name": "uuid-base62",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\projects\\JavaScript\\bikergram\\bikergram-db"
    ]
  ],
  "_from": "uuid-base62@latest",
  "_id": "uuid-base62@0.1.0",
  "_inCache": true,
  "_location": "/uuid-base62",
  "_nodeVersion": "0.10.36",
  "_npmUser": {
    "name": "dmarcelino",
    "email": "dario@appscot.com"
  },
  "_npmVersion": "2.11.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "uuid-base62",
    "scope": null,
    "escapedName": "uuid-base62",
    "name": "uuid-base62",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/uuid-base62/-/uuid-base62-0.1.0.tgz",
  "_shasum": "a2a853b98be0baaee4f75ee41bc3d8e5a15c0f7e",
  "_shrinkwrap": null,
  "_spec": "uuid-base62",
  "_where": "C:\\projects\\JavaScript\\bikergram\\bikergram-db",
  "author": {
    "name": "Dario Marcelino",
    "email": "dario@appscot.com"
  },
  "bugs": {
    "url": "https://github.com/dmarcelino/uuid-base62/issues"
  },
  "dependencies": {
    "base-x": "^1.0.0",
    "node-uuid": "^1.4.3"
  },
  "description": "Base62 non-sequential url-safe UUID generator (RFC4122)",
  "devDependencies": {
    "mocha": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "a2a853b98be0baaee4f75ee41bc3d8e5a15c0f7e",
    "tarball": "https://registry.npmjs.org/uuid-base62/-/uuid-base62-0.1.0.tgz"
  },
  "gitHead": "3bbb11368c01f96c66513312215926a375451f12",
  "homepage": "https://github.com/dmarcelino/uuid-base62#readme",
  "keywords": [
    "uuid",
    "uid",
    "base62",
    "unique",
    "id",
    "identifier",
    "url-friendly",
    "generator",
    "base64"
  ],
  "license": "MIT",
  "main": "uuid-base62.js",
  "maintainers": [
    {
      "name": "dmarcelino",
      "email": "dario@appscot.com"
    }
  ],
  "name": "uuid-base62",
  "optionalDependencies": {},
  "readme": "[![npm version](https://badge.fury.io/js/uuid-base62.svg)](http://badge.fury.io/js/uuid-base62)\n[![Build Status](https://travis-ci.org/dmarcelino/uuid-base62.svg?branch=master)](https://travis-ci.org/dmarcelino/uuid-base62)\n[![Dependency Status](https://david-dm.org/dmarcelino/uuid-base62.svg)](https://david-dm.org/dmarcelino/uuid-base62)\n\n# uuid-base62\nBase62 non-sequential url-friendly UUID generator (RFC4122)\n\n## Overview\n\nuuid-base62 makes it easy to generate short base62 (or any other base) UUIDs. The unencoded UUIDs are generated by [node-uuid](https://github.com/broofa/node-uuid) which follows [RFC4122](http://www.ietf.org/rfc/rfc4122.txt). The encoded UUIDs are alphanumeric [0-9a-zA-Z] and always have a length of 22 chars.\n\n## Instalation\n```shell\nnpm i uuid-base62 -S\n```\n\n## Usage\n```javascript\nvar uuidBase62 = require('uuid-base62');\n\nvar uuid = uuidBase62.v4();\n// -> 2qY9COoAhfMrsH7mCyh86T\n\n// if the original uuid is needed\nvar originalUuid = uuidBase62.decode(uuid);\n// -> 9af099b2-6244-4fc1-b72b-1d69a24481b7\n\n// if an uuid needs to be encoded\nvar encoded = uuidBase62.encode('8fc60e7c-3b3c-48e9-a6a7-a5fe4f1fbc31');\n// -> 2fNwVYePN8WqqDFvVf7XMN\n```\n\nThat's it. uuid-base62 also supports other bases, example for base64:\n```javascript\nuuidBase62.customBase = new uuidBase62.baseX(\"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_\");\nvar uuid = uuidBase62.v4();\n// -> 31LoSI_BVeQpXtwu_-GEbL\n```\n\nFor more examples check the [tests](https://github.com/dmarcelino/uuid-base62/blob/master/test/uuid-base62.test.js).\n\n## License\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dmarcelino/uuid-base62.git"
  },
  "scripts": {
    "test": "mocha test"
  },
  "version": "0.1.0"
}
